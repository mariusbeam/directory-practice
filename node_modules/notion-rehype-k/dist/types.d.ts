export declare type Task = (context: Context) => void;
export interface Options {
    notionPrefix?: string;
    enableNestedParagraph?: boolean;
    enableBlockId?: boolean;
    convertRawHtml?: (richTextObj: any) => string | false | undefined | null;
    pageReference?: {
        [pageId: string]: any;
    };
    footnoteReference?: {
        [blockId: string]: any;
    };
    footnoteTitle?: string;
    footnoteBackLabel?: string;
}
export interface Context {
    addTasks<T>(array: T[] | undefined, iterFunc: (item: T, index: number) => Task): void;
    addTasks(task: Task): void;
    addFootnote(footnode: any): number;
    options: Options;
}
export declare enum BlockType {
    paragraph = "paragraph",
    heading = "heading",
    callout = "callout",
    quote = "quote",
    bulleted_list = "bulleted_list",
    numbered_list = "numbered_list",
    to_do_list = "to_do_list",
    toggle = "toggle",
    code = "code",
    embed = "embed",
    image = "image",
    video = "video",
    file = "file",
    bookmark = "bookmark",
    equation = "equation",
    divider = "divider",
    column_list = "column_list",
    column = "column",
    link_preview = "link_preview",
    link_to_page = "link_to_page",
    synced_block = "synced_block",
    table = "table",
    audio = "audio"
}
