import { getBlockHast } from './index.js';
import { h, notionPrefixFactory, groupBlocks } from '../utils.js';
export const addTasksToAddDirectChildren = (context, hast, children) => {
    context.addTasks(groupBlocks(children), (child) => (ctx) => {
        const childHast = getBlockHast(ctx, child);
        childHast && hast.children.push(childHast);
    });
};
const handler = (context, children) => {
    const wrapperClass = notionPrefixFactory(context)('children-wrapper');
    if (!children || children.length < 1) {
        return null;
    }
    const hast = h('div', { className: [wrapperClass] }, []);
    addTasksToAddDirectChildren(context, hast, children);
    return hast;
};
export const addTasksToAddWrappedChildren = (context, hast, children) => {
    const childrenHast = handler(context, children);
    if (!childrenHast) {
        return;
    }
    context.addTasks(() => {
        hast.children.push(childrenHast);
    });
};
export default handler;
