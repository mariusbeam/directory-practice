import handleRichText from './rich-text.js';
import { h, getFootnoteRefId, getFootnoteContentId } from '../utils.js';
const getLiHast = (context, footnote, count) => {
    const id = getFootnoteContentId(count);
    const refId = getFootnoteRefId(count);
    const hast = h('li', { id }, []);
    footnote.rich_text?.forEach((richTextObj) => {
        hast.children.push(handleRichText(context, null, richTextObj));
    });
    const backLabel = context.options.footnoteBackLabel || 'Back to ref';
    const backToRefLink = h('a', {
        href: `#${refId}`,
        className: ['footnote-backref'],
        title: backLabel,
        'aria-label': backLabel,
    }, [h('text', 'â†©')]);
    hast.children.push(backToRefLink);
    return hast;
};
const handler = (context, footnotes) => {
    const blockClass = 'footnotes';
    const title = context.options.footnoteTitle || 'Footnotes';
    const footnotesTitle = title === '<hr>'
        ? h('hr', { className: [`${blockClass}-divider`] }, [])
        : h('h2', { className: [`${blockClass}-title`] }, [h('text', title)]);
    const footnotesList = h('ol', { className: [`${blockClass}-list`] }, footnotes.map((footnote, index) => getLiHast(context, footnote, index + 1)));
    const hast = h('section', { className: [blockClass] }, [footnotesTitle, footnotesList]);
    return hast;
};
export default handler;
