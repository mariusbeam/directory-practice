"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  ViteToml: () => ViteToml
});
module.exports = __toCommonJS(src_exports);
var import_toml_eslint_parser = require("toml-eslint-parser");
var import_pluginutils = require("@rollup/pluginutils");
var ViteToml = ({
  namedExports = false
} = {}) => {
  const transform = function(code, id) {
    if (!id.endsWith(".toml")) {
      return null;
    }
    const parsed = (0, import_toml_eslint_parser.parseTOML)(code);
    const value = (0, import_toml_eslint_parser.getStaticTOMLValue)(parsed);
    const newCode = (0, import_pluginutils.dataToEsm)(value, {
      preferConst: true,
      compact: false,
      namedExports,
      indent: "  "
    });
    return newCode;
  };
  return {
    name: "toml",
    transform
  };
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ViteToml
});
