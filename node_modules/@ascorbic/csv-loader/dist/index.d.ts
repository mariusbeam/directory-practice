import { Loader } from 'astro/loaders';
import Papa from 'papaparse';

interface CSVLoaderOptions {
    /** Path to the CSV file */
    fileName: string;
    /**
     * Define how the header values should be transformed into field names.
     * By default the values are camelized. Pass `false` to leave unchanged.
     * Pass a function to transform the header values yourself.
     */
    transformHeader?: false | ((header: string, index: number) => string);
    /**
     * The field to use as an ID. Values in the column must be unique.
     * If the header is transformed, it is the value _after_ transformation.
     * Default is the first column.
     * */
    idField?: string;
    /** Options passed to the CSV parser */
    parserOptions?: Omit<Papa.ParseConfig, "header" | "dynamicTyping" | "transformHeader" | "step" | "complete">;
}
/**
 * Loads entries from a CSV file. The file must contain an array of objects that contain unique `id` fields, or an object with string keys.
 */
declare function csvLoader({ fileName, idField, transformHeader, parserOptions, }: CSVLoaderOptions): Loader;

export { type CSVLoaderOptions, csvLoader };
