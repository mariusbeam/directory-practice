import { Loader } from 'astro/loaders';
import { ZodSchema } from 'astro/zod';

interface SharedOptions {
    /** The number of entries to generate */
    entryCount: number;
    /** If true, the loader will generate mock HTML so that render(entry) can be used */
    mockHTML?: boolean;
    /** The field to use to generate a unique ID. Default is to add a numeric index. */
    idField?: string;
    /** Seed value that can be used to ensure that the generated data is the same each time */
    seed?: number;
}
type MockLoaderOptions = SharedOptions & ({
    schema: ZodSchema;
    loader?: never;
} | {
    loader: Loader;
    schema?: ZodSchema;
});
/**
 * Generates mock data for a collection.
 */
declare function mockLoader({ entryCount, loader, ...options }: MockLoaderOptions): Loader;

export { type MockLoaderOptions, mockLoader };
