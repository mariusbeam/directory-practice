import { LoaderContext } from 'astro/loaders';

/**
 * Get the headers needed to make a conditional request.
 * Uses the etag and last-modified values from the meta store.
 */
declare function getConditionalHeaders({ init, meta, }: {
    /** Initial headers to include */
    init?: RequestInit["headers"];
    /** Meta store to get etag and last-modified values from */
    meta: LoaderContext["meta"];
}): Headers;
/**
 * Store the etag or last-modified headers from a response in the meta store.
 */
declare function storeConditionalHeaders({ headers, meta, }: {
    /** Headers from the response */
    headers: Headers;
    /** Meta store to store etag and last-modified values in */
    meta: LoaderContext["meta"];
}): void;

export { getConditionalHeaders, storeConditionalHeaders };
